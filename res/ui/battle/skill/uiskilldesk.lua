--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
result['Layer']=cc.Node:create()
result['Layer']:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(result['Layer'])
layout:setSize({width = 1280.0000, height = 720.0000})

--Create node_skll_desk
result['node_skll_desk']=cc.Node:create()
result['node_skll_desk']:setName("node_skll_desk")
result['node_skll_desk']:setTag(39)
result['node_skll_desk']:setCascadeColorEnabled(true)
result['node_skll_desk']:setCascadeOpacityEnabled(true)
result['node_skll_desk']:setPosition(640.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['node_skll_desk'])
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setLeftMargin(640.0000)
layout:setRightMargin(640.0000)
layout:setTopMargin(720.0000)
result['Layer']:addChild(result['node_skll_desk'])

--Create btn_skill_3
innerCSD = require("ui.battle.skill.uiskillitem2")
innerProject = innerCSD.create(callBackProvider)
result['btn_skill_3'] = innerProject.root
result['btn_skill_3'].animation = innerProject.animation
result['btn_skill_3']:setName("btn_skill_3")
result['btn_skill_3']:setTag(861)
result['btn_skill_3']:setCascadeColorEnabled(true)
result['btn_skill_3']:setCascadeOpacityEnabled(true)
result['btn_skill_3']:setPosition(-104.0004, 50.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['btn_skill_3'])
layout:setLeftMargin(-104.0004)
layout:setRightMargin(104.0004)
layout:setTopMargin(-50.0000)
layout:setBottomMargin(50.0000)
innerProject.animation:setTimeSpeed(1.0000)
result['btn_skill_3']:runAction(innerProject.animation)
result['node_skll_desk']:addChild(result['btn_skill_3'])

--Create btn_skill_4
innerCSD = require("ui.battle.skill.uiskillitem2")
innerProject = innerCSD.create(callBackProvider)
result['btn_skill_4'] = innerProject.root
result['btn_skill_4'].animation = innerProject.animation
result['btn_skill_4']:setName("btn_skill_4")
result['btn_skill_4']:setTag(877)
result['btn_skill_4']:setCascadeColorEnabled(true)
result['btn_skill_4']:setCascadeOpacityEnabled(true)
result['btn_skill_4']:setPosition(-0.0007, 50.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['btn_skill_4'])
layout:setLeftMargin(-0.0007)
layout:setRightMargin(0.0007)
layout:setTopMargin(-50.0000)
layout:setBottomMargin(50.0000)
innerProject.animation:setTimeSpeed(1.0000)
result['btn_skill_4']:runAction(innerProject.animation)
result['node_skll_desk']:addChild(result['btn_skill_4'])

--Create btn_skill_17
innerCSD = require("ui.battle.skill.uiskillitem2")
innerProject = innerCSD.create(callBackProvider)
result['btn_skill_17'] = innerProject.root
result['btn_skill_17'].animation = innerProject.animation
result['btn_skill_17']:setName("btn_skill_17")
result['btn_skill_17']:setTag(909)
result['btn_skill_17']:setCascadeColorEnabled(true)
result['btn_skill_17']:setCascadeOpacityEnabled(true)
result['btn_skill_17']:setPosition(104.0017, 50.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(result['btn_skill_17'])
layout:setLeftMargin(104.0017)
layout:setRightMargin(-104.0017)
layout:setTopMargin(-50.0000)
layout:setBottomMargin(50.0000)
innerProject.animation:setTimeSpeed(1.0000)
result['btn_skill_17']:runAction(innerProject.animation)
result['node_skll_desk']:addChild(result['btn_skill_17'])

--Create btn_skill_14
innerCSD = require("ui.battle.skill.uiskillitem1")
innerProject = innerCSD.create(callBackProvider)
result['btn_skill_14'] = innerProject.root
result['btn_skill_14'].animation = innerProject.animation
result['btn_skill_14']:setName("btn_skill_14")
result['btn_skill_14']:setTag(2204)
result['btn_skill_14']:setCascadeColorEnabled(true)
result['btn_skill_14']:setCascadeOpacityEnabled(true)
result['btn_skill_14']:setPosition(45.9520, 218.0160)
layout = ccui.LayoutComponent:bindLayoutComponent(result['btn_skill_14'])
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.0359)
layout:setPositionPercentY(0.3028)
layout:setLeftMargin(45.9520)
layout:setRightMargin(1234.0480)
layout:setTopMargin(501.9840)
layout:setBottomMargin(218.0160)
innerProject.animation:setTimeSpeed(1.0000)
result['btn_skill_14']:runAction(innerProject.animation)
result['Layer']:addChild(result['btn_skill_14'])

--Create btn_skill_5
innerCSD = require("ui.battle.skill.uiskillitem1")
innerProject = innerCSD.create(callBackProvider)
result['btn_skill_5'] = innerProject.root
result['btn_skill_5'].animation = innerProject.animation
result['btn_skill_5']:setName("btn_skill_5")
result['btn_skill_5']:setTag(893)
result['btn_skill_5']:setCascadeColorEnabled(true)
result['btn_skill_5']:setCascadeOpacityEnabled(true)
result['btn_skill_5']:setPosition(46.5920, 128.1600)
layout = ccui.LayoutComponent:bindLayoutComponent(result['btn_skill_5'])
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.0364)
layout:setPositionPercentY(0.1780)
layout:setLeftMargin(46.5920)
layout:setRightMargin(1233.4080)
layout:setTopMargin(591.8400)
layout:setBottomMargin(128.1600)
innerProject.animation:setTimeSpeed(1.0000)
result['btn_skill_5']:runAction(innerProject.animation)
result['Layer']:addChild(result['btn_skill_5'])

--Create node_left
innerCSD = require("ui.battle.skill.uiskill_list_left")
innerProject = innerCSD.create(callBackProvider)
result['node_left'] = innerProject.root
result['node_left'].animation = innerProject.animation
result['node_left']:setName("node_left")
result['node_left']:setTag(255)
result['node_left']:setCascadeColorEnabled(true)
result['node_left']:setCascadeOpacityEnabled(true)
result['node_left']:setPosition(0.0000, 306.0720)
layout = ccui.LayoutComponent:bindLayoutComponent(result['node_left'])
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentY(0.4251)
layout:setRightMargin(1280.0000)
layout:setTopMargin(413.9280)
layout:setBottomMargin(306.0720)
innerProject.animation:setTimeSpeed(1.0000)
result['node_left']:runAction(innerProject.animation)
result['Layer']:addChild(result['node_left'])

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = result['Layer']
return result;
end

return Result

