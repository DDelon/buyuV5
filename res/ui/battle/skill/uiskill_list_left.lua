--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create panel
local panel = ccui.Layout:create()
panel:ignoreContentAdaptWithSize(false)
panel:setClippingEnabled(false)
panel:setBackGroundColorType(1)
panel:setBackGroundColor({r = 150, g = 200, b = 255})
panel:setBackGroundColorOpacity(0)
panel:setTouchEnabled(true);
panel:setLayoutComponentEnabled(true)
panel:setName("panel")
panel:setTag(250)
panel:setCascadeColorEnabled(true)
panel:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(panel)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
Node:addChild(panel)

--Create node_open
innerCSD = require("ui.battle.skill.uiskillitem1")
innerProject = innerCSD.create(callBackProvider)
local node_open = innerProject.root
node_open.animation = innerProject.animation
node_open:setName("node_open")
node_open:setTag(340)
node_open:setCascadeColorEnabled(true)
node_open:setCascadeOpacityEnabled(true)
node_open:setPosition(45.1900, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(node_open)
layout:setPositionPercentYEnabled(true)
layout:setLeftMargin(45.1900)
layout:setRightMargin(-45.1900)
innerProject.animation:setTimeSpeed(1.0000)
node_open:runAction(innerProject.animation)
panel:addChild(node_open)

--Create panel_left
local panel_left = ccui.Layout:create()
panel_left:ignoreContentAdaptWithSize(false)
panel_left:setClippingEnabled(true)
panel_left:setBackGroundColorType(1)
panel_left:setBackGroundColor({r = 150, g = 200, b = 255})
panel_left:setBackGroundColorOpacity(0)
panel_left:setTouchEnabled(true);
panel_left:setLayoutComponentEnabled(true)
panel_left:setName("panel_left")
panel_left:setTag(226)
panel_left:setCascadeColorEnabled(true)
panel_left:setCascadeOpacityEnabled(true)
panel_left:setAnchorPoint(0.0000, 0.5000)
panel_left:setPosition(87.5400, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(panel_left)
layout:setPositionPercentYEnabled(true)
layout:setSize({width = 400.0000, height = 100.0000})
layout:setLeftMargin(87.5400)
layout:setRightMargin(-487.5400)
layout:setTopMargin(-50.0000)
layout:setBottomMargin(-50.0000)
panel:addChild(panel_left)

--Create node_skill
local node_skill=cc.Node:create()
node_skill:setName("node_skill")
node_skill:setTag(338)
node_skill:setCascadeColorEnabled(true)
node_skill:setCascadeOpacityEnabled(true)
node_skill:setPosition(0.0000, 50.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(node_skill)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentY(0.5000)
layout:setRightMargin(400.0000)
layout:setTopMargin(50.0000)
layout:setBottomMargin(50.0000)
panel_left:addChild(node_skill)

--Create image_skill_bg
local image_skill_bg = ccui.ImageView:create()
image_skill_bg:ignoreContentAdaptWithSize(false)
image_skill_bg:loadTexture("Default/ImageFile.png",0)
image_skill_bg:setLayoutComponentEnabled(true)
image_skill_bg:setName("image_skill_bg")
image_skill_bg:setTag(426)
image_skill_bg:setCascadeColorEnabled(true)
image_skill_bg:setCascadeOpacityEnabled(true)
image_skill_bg:setAnchorPoint(0.0000, 0.5000)
image_skill_bg:setOpacity(0)
layout = ccui.LayoutComponent:bindLayoutComponent(image_skill_bg)
layout:setPositionPercentYEnabled(true)
layout:setSize({width = 270.0000, height = 80.0000})
layout:setRightMargin(-270.0000)
layout:setTopMargin(-40.0000)
layout:setBottomMargin(-40.0000)
node_skill:addChild(image_skill_bg)

--Create node_skill_left_1
innerCSD = require("ui.battle.skill.uiskillitem1")
innerProject = innerCSD.create(callBackProvider)
local node_skill_left_1 = innerProject.root
node_skill_left_1.animation = innerProject.animation
node_skill_left_1:setName("node_skill_left_1")
node_skill_left_1:setTag(216)
node_skill_left_1:setCascadeColorEnabled(true)
node_skill_left_1:setCascadeOpacityEnabled(true)
node_skill_left_1:setPosition(46.3700, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(node_skill_left_1)
layout:setPositionPercentYEnabled(true)
layout:setLeftMargin(46.3700)
layout:setRightMargin(-46.3700)
innerProject.animation:setTimeSpeed(1.0000)
node_skill_left_1:runAction(innerProject.animation)
node_skill:addChild(node_skill_left_1)

--Create node_skill_left_2
innerCSD = require("ui.battle.skill.uiskillitem1")
innerProject = innerCSD.create(callBackProvider)
local node_skill_left_2 = innerProject.root
node_skill_left_2.animation = innerProject.animation
node_skill_left_2:setName("node_skill_left_2")
node_skill_left_2:setTag(230)
node_skill_left_2:setCascadeColorEnabled(true)
node_skill_left_2:setCascadeOpacityEnabled(true)
node_skill_left_2:setPosition(132.9400, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(node_skill_left_2)
layout:setPositionPercentYEnabled(true)
layout:setLeftMargin(132.9400)
layout:setRightMargin(-132.9400)
innerProject.animation:setTimeSpeed(1.0000)
node_skill_left_2:runAction(innerProject.animation)
node_skill:addChild(node_skill_left_2)

--Create node_skill_left_3
innerCSD = require("ui.battle.skill.uiskillitem1")
innerProject = innerCSD.create(callBackProvider)
local node_skill_left_3 = innerProject.root
node_skill_left_3.animation = innerProject.animation
node_skill_left_3:setName("node_skill_left_3")
node_skill_left_3:setTag(240)
node_skill_left_3:setCascadeColorEnabled(true)
node_skill_left_3:setCascadeOpacityEnabled(true)
node_skill_left_3:setPosition(221.3700, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(node_skill_left_3)
layout:setPositionPercentYEnabled(true)
layout:setLeftMargin(221.3700)
layout:setRightMargin(-221.3700)
innerProject.animation:setTimeSpeed(1.0000)
node_skill_left_3:runAction(innerProject.animation)
node_skill:addChild(node_skill_left_3)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

